#include <stdio.h>
#include <stdlib.h>
#include <stdbool.h>

int abs_diff(int a, int b) {
    return abs(a - b);
}

int main() {
    int num_tracks, head_pos, i, j, total_movement = 0;
    bool direction;

    printf("Enter the number of tracks: ");
    scanf("%d", &num_tracks);

    int *tracks = (int *)malloc(num_tracks * sizeof(int));

    printf("Enter the track positions:\n");
    for (i = 0; i < num_tracks; i++) {
        scanf("%d", &tracks[i]);
    }

    printf("Enter the initial head position: ");
    scanf("%d", &head_pos);

    // Add the head position to the tracks list
    tracks[num_tracks] = head_pos;
    num_tracks++;

    // Sort the tracks in ascending order
    for (i = 0; i < num_tracks - 1; i++) {
        for (j = 0; j < num_tracks - i - 1; j++) {
            if (tracks[j] > tracks[j + 1]) {
                int temp = tracks[j];
                tracks[j] = tracks[j + 1];
                tracks[j + 1] = temp;
            }
        }
    }

    // Find the index of the head position
    int head_index;
    for (i = 0; i < num_tracks; i++) {
        if (tracks[i] == head_pos) {
            head_index = i;
            break;
        }
    }

    // Determine the direction of movement
    direction = (head_index < num_tracks / 2) ? true : false;

    // Simulate the SCAN algorithm
    printf("Sequence of track movements:\n");
    if (direction) {
        for (i = head_index; i >= 0; i--) {
            printf("%d ", tracks[i]);
            total_movement += abs_diff(tracks[i], tracks[i - 1]);
        }
        for (i = head_index + 1; i < num_tracks; i++) {
            printf("%d ", tracks[i]);
            total_movement += abs_diff(tracks[i], tracks[i - 1]);
        }
    } else {
        for (i = head_index; i < num_tracks; i++) {
            printf("%d ", tracks[i]);
            total_movement += abs_diff(tracks[i], tracks[i + 1]);
        }
        for (i = head_index - 1; i >= 0; i--) {
            printf("%d ", tracks[i]);
            total_movement += abs_diff(tracks[i], tracks[i - 1]);
        }
    }

    printf("\nAverage head movement: %.2f\n", (float)total_movement / (num_tracks - 1));

    free(tracks);

    return 0;
}
